// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentRegistrationApp.Presentation;

#nullable disable

namespace StudentRegistrationApp.Presentation.Migrations
{
    [DbContext(typeof(StudentsRegisterDbContext))]
    [Migration("20241024144524_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("17119498-8bf9-4068-a5cf-dab7ddb55cd9"),
                            Credits = 3,
                            Name = "Historia 1",
                            TeacherId = new Guid("c8bff21b-0332-4d84-81a7-3941c18f1cc4")
                        },
                        new
                        {
                            CourseId = new Guid("be1d7182-1893-4f2a-b795-a8402398e605"),
                            Credits = 3,
                            Name = "Historia 2",
                            TeacherId = new Guid("c8bff21b-0332-4d84-81a7-3941c18f1cc4")
                        },
                        new
                        {
                            CourseId = new Guid("93c08df5-3d32-495b-a470-e481b685a4a7"),
                            Credits = 3,
                            Name = "Matematicas 1",
                            TeacherId = new Guid("3fc255e6-d2f7-47f1-9b79-35ebf03dd7d4")
                        },
                        new
                        {
                            CourseId = new Guid("f1752182-ed9b-4115-9ba4-a5bf9db62838"),
                            Credits = 3,
                            Name = "Matematicas 2",
                            TeacherId = new Guid("3fc255e6-d2f7-47f1-9b79-35ebf03dd7d4")
                        },
                        new
                        {
                            CourseId = new Guid("a53ba00f-c330-4e4b-9d23-824f325b5f27"),
                            Credits = 3,
                            Name = "Etica",
                            TeacherId = new Guid("9a16ab75-45f2-41f3-b918-4e4bbae71ee5")
                        },
                        new
                        {
                            CourseId = new Guid("3e940134-4079-443e-b36a-da7319303f93"),
                            Credits = 3,
                            Name = "Catedra universitaria",
                            TeacherId = new Guid("9a16ab75-45f2-41f3-b918-4e4bbae71ee5")
                        },
                        new
                        {
                            CourseId = new Guid("34cef1d4-b471-499d-969d-7747dfe057c4"),
                            Credits = 3,
                            Name = "Fisica 1",
                            TeacherId = new Guid("812b7a9f-0c52-4717-b145-b5be80eed88d")
                        },
                        new
                        {
                            CourseId = new Guid("4a7f2c46-774b-41d9-8e6d-becc29a20a72"),
                            Credits = 3,
                            Name = "Fisica 2",
                            TeacherId = new Guid("812b7a9f-0c52-4717-b145-b5be80eed88d")
                        },
                        new
                        {
                            CourseId = new Guid("c04348ed-e25a-4aae-a5b1-e0b497aafe15"),
                            Credits = 3,
                            Name = "Quimica 1",
                            TeacherId = new Guid("f7f5fc7a-8061-48ca-9486-85adc6e0ed97")
                        },
                        new
                        {
                            CourseId = new Guid("508be8aa-ec1a-460d-84ac-3013e1ab43ed"),
                            Credits = 3,
                            Name = "Quimica 2",
                            TeacherId = new Guid("f7f5fc7a-8061-48ca-9486-85adc6e0ed97")
                        });
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = new Guid("c8bff21b-0332-4d84-81a7-3941c18f1cc4"),
                            Name = "Julio Fernandez"
                        },
                        new
                        {
                            TeacherId = new Guid("3fc255e6-d2f7-47f1-9b79-35ebf03dd7d4"),
                            Name = "Andres Villamizar"
                        },
                        new
                        {
                            TeacherId = new Guid("9a16ab75-45f2-41f3-b918-4e4bbae71ee5"),
                            Name = "Luisa Torres"
                        },
                        new
                        {
                            TeacherId = new Guid("812b7a9f-0c52-4717-b145-b5be80eed88d"),
                            Name = "Fernanda Salinas"
                        },
                        new
                        {
                            TeacherId = new Guid("f7f5fc7a-8061-48ca-9486-85adc6e0ed97"),
                            Name = "Martin Hernandez"
                        });
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Course", b =>
                {
                    b.HasOne("StudentRegistrationApp.Domain.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("StudentRegistrationApp.Domain.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentRegistrationApp.Domain.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("StudentRegistrationApp.Domain.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
